{
  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "$connections": {
      "defaultValue": {},
      "type": "Object"
    },
    "cosmos-container": {
      "defaultValue": "profiles",
      "type": "String"
    },
    "cosmos-db": {
      "defaultValue": "db",
      "type": "String"
    },
    "googlesheet-gid": {
      "defaultValue": "default-googlesheet-gid",
      "type": "String"
    },
    "googlesheet-id": {
      "defaultValue": "default-googlesheet-id",
      "type": "String"
    }
  },
  "triggers": {
    "Recurrence": {
      "recurrence": {
        "frequency": "Minute",
        "interval": 5
      },
      "type": "Recurrence"
    }
  },
  "actions": {
    "Filter_array_WORKING_ROWS_CFVALIDATED_NOT_EMPTY": {
      "runAfter": {
        "Filter_array_WORKING_ROWS_EMAIL_IO_NOT_EMPTY": ["Succeeded"]
      },
      "type": "Query",
      "inputs": {
        "from": "@body('Filter_array_WORKING_ROWS_EMAIL_IO_NOT_EMPTY')",
        "where": "@not(equals(length(concat('', item()?['CFValidated'])), 0))"
      }
    },
    "Filter_array_WORKING_ROWS_EMAIL_IO_NOT_EMPTY": {
      "runAfter": {
        "Filter_array_WORKING_ROWS_EseguiOperazione_SI": ["Succeeded"]
      },
      "type": "Query",
      "inputs": {
        "from": "@body('Filter_array_WORKING_ROWS_EseguiOperazione_SI')",
        "where": "@not(equals(length(concat('', item()?['Email_IO'])), 0))"
      }
    },
    "Filter_array_WORKING_ROWS_EseguiOperazione_SI": {
      "runAfter": {
        "Get_rows": ["Succeeded"]
      },
      "type": "Query",
      "inputs": {
        "from": "@body('Get_rows')?['value']",
        "where": "@equals(item()?['EseguiOperazione'], 'SI')"
      }
    },
    "Filter_array_WORKING_ROWS_StatoDatabase_PENDING_WIP": {
      "runAfter": {
        "Filter_array_WORKING_ROWS_CFVALIDATED_NOT_EMPTY": ["Succeeded"]
      },
      "type": "Query",
      "inputs": {
        "from": "@body('Filter_array_WORKING_ROWS_CFVALIDATED_NOT_EMPTY')",
        "where": "@or(equals(item()?['StatoDatabase'], 'PENDING'),equals(item()?['StatoDatabase'], 'WIP'))"
      }
    },
    "Filter_array_WORKING_ROWS_TODO": {
      "runAfter": {
        "Filter_array_WORKING_ROWS_CFVALIDATED_NOT_EMPTY": ["Succeeded"]
      },
      "type": "Query",
      "inputs": {
        "from": "@body('Filter_array_WORKING_ROWS_CFVALIDATED_NOT_EMPTY')",
        "where": "@not(equals(item()?['EsitoOperazione'], 'ESEGUITA'))"
      }
    },
    "For_each_WORKING_ROWS_StatoDatabase_PENDING_WIP": {
      "foreach": "@body('Filter_array_WORKING_ROWS_StatoDatabase_PENDING_WIP')",
      "actions": {
        "For_each_PENDING_WIP": {
          "foreach": "@body('Get_all_documents_PENDING_WIP')?['Documents']",
          "actions": {
            "Update_row_PENDING_WIP": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": {
                  "StatoDatabase": "@item()?['status']"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['googlesheet']['connectionId']"
                  }
                },
                "method": "patch",
                "path": "/datasets/@{encodeURIComponent(parameters('googlesheet-id'))}/tables/@{encodeURIComponent(parameters('googlesheet-gid'))}/items/@{encodeURIComponent(items('For_each_WORKING_ROWS_StatoDatabase_PENDING_WIP')?['__PowerAppsId__'])}"
              }
            }
          },
          "runAfter": {
            "Get_all_documents_PENDING_WIP": ["Succeeded"]
          },
          "type": "Foreach"
        },
        "Get_all_documents_PENDING_WIP": {
          "runAfter": {
            "Set_variable_choice_PENDING_WIP": ["Succeeded"]
          },
          "type": "ApiConnection",
          "inputs": {
            "body": {
              "QueryText": "SELECT TOP 1 * FROM c WHERE c.fiscalCode = \"@{items('For_each_WORKING_ROWS_StatoDatabase_PENDING_WIP')?['CFValidated']}\" AND c.choice = \"@{variables('choice_PENDING_WIP')}\" ORDER BY c.version DESC"
            },
            "host": {
              "connection": {
                "name": "@parameters('$connections')['documentdb']['connectionId']"
              }
            },
            "method": "post",
            "path": "/v2/dbs/@{encodeURIComponent(parameters('cosmos-db'))}/colls/@{encodeURIComponent(parameters('cosmos-container'))}/query"
          }
        },
        "Set_variable_choice_PENDING_WIP": {
          "runAfter": {},
          "type": "SetVariable",
          "inputs": {
            "name": "choice_PENDING_WIP",
            "value": "@{replace(item()?['OperazioneRichiestaEseguita'],'-ABORT','')}"
          }
        }
      },
      "runAfter": {
        "Initialize_variable_choice_PENDING_WIP": ["Succeeded"]
      },
      "type": "Foreach",
      "runtimeConfiguration": {
        "concurrency": {
          "repetitions": 1
        }
      }
    },
    "For_each_WORKING_ROWS_TODO": {
      "foreach": "@body('Filter_array_WORKING_ROWS_TODO')",
      "actions": {
        "Condition": {
          "actions": {
            "Create_or_update_document_noversion": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": "@variables('NewDocument')",
                "headers": {
                  "x-ms-documentdb-raw-partitionkey": "\"@{items('For_each_WORKING_ROWS_TODO')?['CFValidated']}\""
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['documentdb']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/dbs/@{encodeURIComponent(parameters('cosmos-db'))}/colls/@{encodeURIComponent(parameters('cosmos-container'))}/docs"
              }
            }
          },
          "runAfter": {
            "Get_all_documents_ROWS_TODO": ["Succeeded"]
          },
          "else": {
            "actions": {
              "For_each_DOCUMENT_EXISTS": {
                "foreach": "@body('Get_all_documents_ROWS_TODO')?['Documents']",
                "actions": {
                  "Condition_CHECK_DOCUMENT_EXISTS": {
                    "actions": {
                      "no-op-01": {
                        "runAfter": {},
                        "type": "Expression",
                        "kind": "CurrentTime",
                        "inputs": {}
                      }
                    },
                    "runAfter": {},
                    "else": {
                      "actions": {
                        "Create_or_update_document_newversion": {
                          "runAfter": {
                            "Set_variable_NewDocument_newversion_ROWS_TODO": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "body": "@variables('NewDocument')",
                            "headers": {
                              "x-ms-documentdb-raw-partitionkey": "\"@{items('For_each_WORKING_ROWS_TODO')?['CFValidated']}\""
                            },
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['documentdb']['connectionId']"
                              }
                            },
                            "method": "post",
                            "path": "/dbs/@{encodeURIComponent(parameters('cosmos-db'))}/colls/@{encodeURIComponent(parameters('cosmos-container'))}/docs"
                          }
                        },
                        "Set_variable_NewDocument_newversion_ROWS_TODO": {
                          "runAfter": {},
                          "type": "SetVariable",
                          "inputs": {
                            "name": "NewDocument",
                            "value": {
                              "choice": "@variables('choice_ROWS_TODO')",
                              "createdAt": "@utcNow()",
                              "fiscalCode": "@items('For_each_WORKING_ROWS_TODO')?['CFValidated']",
                              "id": "@{items('For_each_WORKING_ROWS_TODO')?['CFValidated']}-@{variables('choice_ROWS_TODO')}-@{substring(concat('0000000000000000',add(int(item()?['version']),1)),length(string(add(int(item()?['version']),1))),16)}",
                              "status": "@{if(contains(items('For_each_WORKING_ROWS_TODO')?['OperazioneRichiesta'],'ABORT'),'ABORTED','PENDING')}",
                              "updatedAt": "@utcNow()",
                              "userDataProcessingId": "@{items('For_each_WORKING_ROWS_TODO')?['CFValidated']}-@{variables('choice_ROWS_TODO')}",
                              "version": "@string(add(int(item()?['version']),1))"
                            }
                          }
                        }
                      }
                    },
                    "expression": {
                      "and": [
                        {
                          "equals": ["@variables('choice_ROWS_TODO')", ""]
                        },
                        {
                          "equals": ["@variables('status_ROWS_TODO')", ""]
                        }
                      ]
                    },
                    "type": "If"
                  }
                },
                "runAfter": {},
                "type": "Foreach"
              }
            }
          },
          "expression": {
            "and": [
              {
                "equals": ["@body('Get_all_documents_ROWS_TODO')?['_count']", 0]
              }
            ]
          },
          "type": "If"
        },
        "Get_all_documents_ROWS_TODO": {
          "runAfter": {
            "Set_variable_NewDocument_ROWS_TODO": ["Succeeded"]
          },
          "type": "ApiConnection",
          "inputs": {
            "body": {
              "QueryText": "SELECT TOP 1 * FROM c WHERE c.fiscalCode = \"@{items('For_each_WORKING_ROWS_TODO')?['CFValidated']}\" AND c.choice = \"@{variables('choice_ROWS_TODO')}\" ORDER BY c.version DESC"
            },
            "host": {
              "connection": {
                "name": "@parameters('$connections')['documentdb']['connectionId']"
              }
            },
            "method": "post",
            "path": "/v2/dbs/@{encodeURIComponent(parameters('cosmos-db'))}/colls/@{encodeURIComponent(parameters('cosmos-container'))}/query"
          }
        },
        "Set_variable_NewDocument_ROWS_TODO": {
          "runAfter": {
            "Set_variable_status_ROWS_TODO": ["Succeeded"]
          },
          "type": "SetVariable",
          "inputs": {
            "name": "NewDocument",
            "value": {
              "choice": "@variables('choice_ROWS_TODO')",
              "createdAt": "@utcNow()",
              "fiscalCode": "@items('For_each_WORKING_ROWS_TODO')?['CFValidated']",
              "id": "@{items('For_each_WORKING_ROWS_TODO')?['CFValidated']}-@{variables('choice_ROWS_TODO')}-0000000000000000",
              "status": "@variables('status_ROWS_TODO')",
              "updatedAt": "@utcNow()",
              "userDataProcessingId": "@{items('For_each_WORKING_ROWS_TODO')?['CFValidated']}-@{variables('choice_ROWS_TODO')}",
              "version": "0"
            }
          }
        },
        "Set_variable_choice_ROWS_TODO": {
          "runAfter": {},
          "type": "SetVariable",
          "inputs": {
            "name": "choice_ROWS_TODO",
            "value": "@{replace(item()?['OperazioneRichiesta'],'-ABORT','')}"
          }
        },
        "Set_variable_status_ROWS_TODO": {
          "runAfter": {
            "Set_variable_choice_ROWS_TODO": ["Succeeded"]
          },
          "type": "SetVariable",
          "inputs": {
            "name": "status_ROWS_TODO",
            "value": "@{if(contains(items('For_each_WORKING_ROWS_TODO')?['OperazioneRichiesta'],'ABORT'),'ABORTED','PENDING')}"
          }
        },
        "Update_row_ROWS_TODO": {
          "runAfter": {
            "Condition": ["Succeeded"]
          },
          "type": "ApiConnection",
          "inputs": {
            "body": {
              "DataOperazione": "@string(utcNow('dd/MM/yyyy'))",
              "EsitoOperazione": "ESEGUITA",
              "OperazioneRichiestaEseguita": "@{items('For_each_WORKING_ROWS_TODO')?['OperazioneRichiesta']}",
              "StatoDatabase": "@variables('status_ROWS_TODO')"
            },
            "host": {
              "connection": {
                "name": "@parameters('$connections')['googlesheet']['connectionId']"
              }
            },
            "method": "patch",
            "path": "/datasets/@{encodeURIComponent(parameters('googlesheet-id'))}/tables/@{encodeURIComponent(parameters('googlesheet-gid'))}/items/@{encodeURIComponent(items('For_each_WORKING_ROWS_TODO')?['__PowerAppsId__'])}"
          }
        }
      },
      "runAfter": {
        "Initialize_variable_NewDocument_ROWS_TODO": ["Succeeded"]
      },
      "type": "Foreach",
      "runtimeConfiguration": {
        "concurrency": {
          "repetitions": 1
        }
      }
    },
    "Get_rows": {
      "runAfter": {},
      "type": "ApiConnection",
      "inputs": {
        "host": {
          "connection": {
            "name": "@parameters('$connections')['googlesheet']['connectionId']"
          }
        },
        "method": "get",
        "path": "/datasets/@{encodeURIComponent(parameters('googlesheet-id'))}/tables/@{encodeURIComponent(parameters('googlesheet-gid'))}/items"
      }
    },
    "Initialize_variable_NewDocument_ROWS_TODO": {
      "runAfter": {
        "Initialize_variable_status_ROWS_TODO": ["Succeeded"]
      },
      "type": "InitializeVariable",
      "inputs": {
        "variables": [
          {
            "name": "NewDocument",
            "type": "object",
            "value": {}
          }
        ]
      }
    },
    "Initialize_variable_choice_PENDING_WIP": {
      "runAfter": {
        "Filter_array_WORKING_ROWS_StatoDatabase_PENDING_WIP": ["Succeeded"]
      },
      "type": "InitializeVariable",
      "inputs": {
        "variables": [
          {
            "name": "choice_PENDING_WIP",
            "type": "String",
            "value": "no-op"
          }
        ]
      }
    },
    "Initialize_variable_choice_ROWS_TODO": {
      "runAfter": {
        "Filter_array_WORKING_ROWS_TODO": ["Succeeded"]
      },
      "type": "InitializeVariable",
      "inputs": {
        "variables": [
          {
            "name": "choice_ROWS_TODO",
            "type": "String",
            "value": "no-op"
          }
        ]
      }
    },
    "Initialize_variable_status_ROWS_TODO": {
      "runAfter": {
        "Initialize_variable_choice_ROWS_TODO": ["Succeeded"]
      },
      "type": "InitializeVariable",
      "inputs": {
        "variables": [
          {
            "name": "status_ROWS_TODO",
            "type": "String",
            "value": "no-op"
          }
        ]
      }
    }
  }
}
